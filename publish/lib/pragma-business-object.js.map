{"version":3,"sources":["lib/pragma-business-object.ts"],"names":[],"mappings":";;IAEA,WAAY,eAAe;QACvB,qDAAQ,CAAA;QACR,yDAAU,CAAA;QACV,qDAAQ,CAAA;QACR,yDAAU,CAAA;IACd,CAAC,EALW,uBAAe,KAAf,uBAAe,QAK1B;IALD,IAAY,eAAe,GAAf,uBAKX,CAAA;IAAA,CAAC;IAEF;QA8BI,8BAAY,SAA0C;YAA1C,yBAA0C,GAA1C,gBAA0C;YAClD,IAAI,CAAC,OAAO,GAAG,IAAI,GAAG,EAAe,CAAC;YACtC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;YAC3B,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAC7B,CAAC;QA7BD,sBAAI,uCAAK;iBAAT;gBACI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;oBAClB,MAAM,CAAC,IAAI,CAAC;gBAChB,CAAC;gBAED,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;YAChC,CAAC;;;WAAA;QAED,gDAAiB,GAAjB;YACI,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;gBACjB,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;gBACjF,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;gBACrF,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;gBACjF,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;YACzF,CAAC;QACL,CAAC;QAED,4CAAa,GAAb,UAAc,MAAc,EAAE,OAAmB;YAAnB,uBAAmB,GAAnB,cAAmB;YAC7C,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;gBAC3B,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,CAAC;YAC7C,CAAC;YAED,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC;QAOL,2BAAC;IAAD,CAnCA,AAmCC,IAAA;IAnCY,4BAAoB,uBAmChC,CAAA","file":"pragma-business-object.js","sourcesContent":["import {IPragamBusinessDataStore} from \"../types/IPragamBusinessDataStore\";\n\nexport enum PragmaBOActions {\n    load = 0,\n    create = 1,\n    save = 2,\n    delete = 3\n};\n\nexport class PragmaBusinessObject {\n    actions: Map<number, any>;\n    dataStore: IPragamBusinessDataStore;\n\n    // Just a shorthand for binding purposes\n    get model(): any {\n        if (!this.dataStore) {\n            return null;\n        }\n\n        return this.dataStore.model;\n    }\n\n    initializeActions() {\n        if (this.dataStore) {\n            this.actions.set(PragmaBOActions.load, this.dataStore.load.bind(this.dataStore));\n            this.actions.set(PragmaBOActions.create, this.dataStore.create.bind(this.dataStore));\n            this.actions.set(PragmaBOActions.save, this.dataStore.save.bind(this.dataStore));\n            this.actions.set(PragmaBOActions.delete, this.dataStore.delete.bind(this.dataStore));\n        }\n    }\n\n    performAction(action: number, options: any = null) {\n        if (this.actions.has(action)) {\n            return this.actions.get(action)(options);\n        }\n\n        return null;\n    }\n\n    constructor(dataStore: IPragamBusinessDataStore = null) {\n        this.actions = new Map<number, any>();\n        this.dataStore = dataStore;\n        this.initializeActions();\n    }\n}"]}