{"version":3,"sources":["lib/pragma-business-object.ts"],"names":[],"mappings":";;;;;;;YAEA,WAAY,eAAe;gBACvB,qDAAQ,CAAA;gBACR,yDAAU,CAAA;gBACV,qDAAQ,CAAA;gBACR,yDAAU,CAAA;YACd,CAAC,EALW,eAAe,KAAf,eAAe,QAK1B;0DAAA;YAAA,CAAC;YAEF;gBA8BI,8BAAY,SAA0C;oBAA1C,yBAA0C,GAA1C,gBAA0C;oBAClD,IAAI,CAAC,OAAO,GAAG,IAAI,GAAG,EAAe,CAAC;oBACtC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;oBAC3B,IAAI,CAAC,iBAAiB,EAAE,CAAC;gBAC7B,CAAC;gBA7BD,sBAAI,uCAAK;yBAAT;wBACI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;4BAClB,MAAM,CAAC,IAAI,CAAC;wBAChB,CAAC;wBAED,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;oBAChC,CAAC;;;mBAAA;gBAED,gDAAiB,GAAjB;oBACI,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;wBACjB,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;wBACjF,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;wBACrF,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;wBACjF,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;oBACzF,CAAC;gBACL,CAAC;gBAED,4CAAa,GAAb,UAAc,MAAc,EAAE,OAAmB;oBAAnB,uBAAmB,GAAnB,cAAmB;oBAC7C,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;wBAC3B,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,CAAC;oBAC7C,CAAC;oBAED,MAAM,CAAC,IAAI,CAAC;gBAChB,CAAC;gBAOL,2BAAC;YAAD,CAnCA,AAmCC,IAAA;YAnCD,uDAmCC,CAAA","file":"pragma-business-object.js","sourcesContent":["import {IPragamBusinessDataStore} from \"../types/IPragamBusinessDataStore\";\n\nexport enum PragmaBOActions {\n    load = 0,\n    create = 1,\n    save = 2,\n    delete = 3\n};\n\nexport class PragmaBusinessObject {\n    actions: Map<number, any>;\n    dataStore: IPragamBusinessDataStore;\n\n    // Just a shorthand for binding purposes\n    get model(): any {\n        if (!this.dataStore) {\n            return null;\n        }\n\n        return this.dataStore.model;\n    }\n\n    initializeActions() {\n        if (this.dataStore) {\n            this.actions.set(PragmaBOActions.load, this.dataStore.load.bind(this.dataStore));\n            this.actions.set(PragmaBOActions.create, this.dataStore.create.bind(this.dataStore));\n            this.actions.set(PragmaBOActions.save, this.dataStore.save.bind(this.dataStore));\n            this.actions.set(PragmaBOActions.delete, this.dataStore.delete.bind(this.dataStore));\n        }\n    }\n\n    performAction(action: number, options: any = null) {\n        if (this.actions.has(action)) {\n            return this.actions.get(action)(options);\n        }\n\n        return null;\n    }\n\n    constructor(dataStore: IPragamBusinessDataStore = null) {\n        this.actions = new Map<number, any>();\n        this.dataStore = dataStore;\n        this.initializeActions();\n    }\n}"]}