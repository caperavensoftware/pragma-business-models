{"version":3,"sources":["lib/pragma-business-object.js"],"names":["PragmaBOActions","load","create","save","delete","PragmaBusinessObject","initializeActions","dataStore","actions","set","bind","performAction","action","options","has","get","model","Map"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;uCAAaA,e,GAAkB;AAC3BC,sBAAM,CADqB;AAE3BC,wBAAQ,CAFmB;AAG3BC,sBAAM,CAHqB;AAI3BC,wBAAQ;AAJmB,a;;;;4CAOlBC,oB;+CAaTC,iB,gCAAoB;AAChB,wBAAI,KAAKC,SAAT,EAAoB;AAChB,6BAAKC,OAAL,CAAaC,GAAb,CAAiBT,gBAAgBC,IAAjC,EAAuC,KAAKM,SAAL,CAAeN,IAAf,CAAoBS,IAApB,CAAyB,KAAKH,SAA9B,CAAvC;AACA,6BAAKC,OAAL,CAAaC,GAAb,CAAiBT,gBAAgBE,MAAjC,EAAyC,KAAKK,SAAL,CAAeL,MAAf,CAAsBQ,IAAtB,CAA2B,KAAKH,SAAhC,CAAzC;AACA,6BAAKC,OAAL,CAAaC,GAAb,CAAiBT,gBAAgBG,IAAjC,EAAuC,KAAKI,SAAL,CAAeJ,IAAf,CAAoBO,IAApB,CAAyB,KAAKH,SAA9B,CAAvC;AACA,6BAAKC,OAAL,CAAaC,GAAb,CAAiBT,gBAAgBI,MAAjC,EAAyC,KAAKG,SAAL,CAAeH,MAAf,CAAsBM,IAAtB,CAA2B,KAAKH,SAAhC,CAAzC;AACH;AACJ,iB;;+CAEDI,a,0BAAcC,M,EAAwB;AAAA,wBAAhBC,OAAgB,uEAAN,IAAM;;AAClC,wBAAI,KAAKL,OAAL,CAAaM,GAAb,CAAiBF,MAAjB,CAAJ,EAA8B;AAC1B,+BAAO,KAAKJ,OAAL,CAAaO,GAAb,CAAiBH,MAAjB,EAAyBC,OAAzB,CAAP;AACH;;AAED,2BAAO,IAAP;AACH,iB;;;;wCAvBW;AACR,4BAAI,CAAC,KAAKN,SAAV,EAAqB;AACjB,mCAAO,IAAP;AACH;;AAED,+BAAO,KAAKA,SAAL,CAAeS,KAAtB;AACH;;;AAmBD,gDAA8B;AAAA,wBAAlBT,SAAkB,uEAAN,IAAM;;AAAA;;AAC1B,yBAAKC,OAAL,GAAe,IAAIS,GAAJ,EAAf;AACA,yBAAKV,SAAL,GAAiBA,SAAjB;AACA,yBAAKD,iBAAL;AACH","file":"pragma-business-object.js","sourcesContent":["export const PragmaBOActions = {\n    load: 0,\n    create: 1,\n    save: 2,\n    delete: 3\n};\n\nexport class PragmaBusinessObject {\n    actions;\n    dataStore;\n\n    // Just a shorthand for binding purposes\n    get model() {\n        if (!this.dataStore) {\n            return null;\n        }\n\n        return this.dataStore.model;\n    }\n\n    initializeActions() {\n        if (this.dataStore) {\n            this.actions.set(PragmaBOActions.load, this.dataStore.load.bind(this.dataStore));\n            this.actions.set(PragmaBOActions.create, this.dataStore.create.bind(this.dataStore));\n            this.actions.set(PragmaBOActions.save, this.dataStore.save.bind(this.dataStore));\n            this.actions.set(PragmaBOActions.delete, this.dataStore.delete.bind(this.dataStore));\n        }\n    }\n\n    performAction(action, options = null) {\n        if (this.actions.has(action)) {\n            return this.actions.get(action)(options);\n        }\n\n        return null;\n    }\n\n    constructor(dataStore = null) {\n        this.actions = new Map();\n        this.dataStore = dataStore;\n        this.initializeActions();\n    }\n}"]}