{"version":3,"sources":["lib/pragma-business-object.js"],"names":["PragmaBOActions","load","create","save","delete","PragmaBusinessObject","dataStore","actions","set","bind","action","options","has","get","model","Map","initializeActions"],"mappings":";;;;;;;;;;AAAO,IAAMA,4CAAkB;AAC3BC,UAAM,CADqB;AAE3BC,YAAQ,CAFmB;AAG3BC,UAAM,CAHqB;AAI3BC,YAAQ;AAJmB,CAAxB;;IAOMC,oB,WAAAA,oB;;;4CAaW;AAChB,gBAAI,KAAKC,SAAT,EAAoB;AAChB,qBAAKC,OAAL,CAAaC,GAAb,CAAiBR,gBAAgBC,IAAjC,EAAuC,KAAKK,SAAL,CAAeL,IAAf,CAAoBQ,IAApB,CAAyB,KAAKH,SAA9B,CAAvC;AACA,qBAAKC,OAAL,CAAaC,GAAb,CAAiBR,gBAAgBE,MAAjC,EAAyC,KAAKI,SAAL,CAAeJ,MAAf,CAAsBO,IAAtB,CAA2B,KAAKH,SAAhC,CAAzC;AACA,qBAAKC,OAAL,CAAaC,GAAb,CAAiBR,gBAAgBG,IAAjC,EAAuC,KAAKG,SAAL,CAAeH,IAAf,CAAoBM,IAApB,CAAyB,KAAKH,SAA9B,CAAvC;AACA,qBAAKC,OAAL,CAAaC,GAAb,CAAiBR,gBAAgBI,MAAjC,EAAyC,KAAKE,SAAL,CAAeF,MAAf,CAAsBK,IAAtB,CAA2B,KAAKH,SAAhC,CAAzC;AACH;AACJ;;;sCAEaI,M,EAAwB;AAAA,gBAAhBC,OAAgB,uEAAN,IAAM;;AAClC,gBAAI,KAAKJ,OAAL,CAAaK,GAAb,CAAiBF,MAAjB,CAAJ,EAA8B;AAC1B,uBAAO,KAAKH,OAAL,CAAaM,GAAb,CAAiBH,MAAjB,EAAyBC,OAAzB,CAAP;AACH;;AAED,mBAAO,IAAP;AACH;;;;;AAxBD;4BACY;AACR,gBAAI,CAAC,KAAKL,SAAV,EAAqB;AACjB,uBAAO,IAAP;AACH;;AAED,mBAAO,KAAKA,SAAL,CAAeQ,KAAtB;AACH;;;AAmBD,oCAA8B;AAAA,YAAlBR,SAAkB,uEAAN,IAAM;;AAAA;;AAC1B,aAAKC,OAAL,GAAe,IAAIQ,GAAJ,EAAf;AACA,aAAKT,SAAL,GAAiBA,SAAjB;AACA,aAAKU,iBAAL;AACH","file":"pragma-business-object.js","sourcesContent":["export const PragmaBOActions = {\n    load: 0,\n    create: 1,\n    save: 2,\n    delete: 3\n};\n\nexport class PragmaBusinessObject {\n    actions;\n    dataStore;\n\n    // Just a shorthand for binding purposes\n    get model() {\n        if (!this.dataStore) {\n            return null;\n        }\n\n        return this.dataStore.model;\n    }\n\n    initializeActions() {\n        if (this.dataStore) {\n            this.actions.set(PragmaBOActions.load, this.dataStore.load.bind(this.dataStore));\n            this.actions.set(PragmaBOActions.create, this.dataStore.create.bind(this.dataStore));\n            this.actions.set(PragmaBOActions.save, this.dataStore.save.bind(this.dataStore));\n            this.actions.set(PragmaBOActions.delete, this.dataStore.delete.bind(this.dataStore));\n        }\n    }\n\n    performAction(action, options = null) {\n        if (this.actions.has(action)) {\n            return this.actions.get(action)(options);\n        }\n\n        return null;\n    }\n\n    constructor(dataStore = null) {\n        this.actions = new Map();\n        this.dataStore = dataStore;\n        this.initializeActions();\n    }\n}"]}